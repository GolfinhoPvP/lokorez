//Initializing client with transport "websocket"
{ listener: 
   { server: 
      { connections: 1
      , paused: false
      , pauseTimeout: 1000
      , watcher: [Object]
      , _events: [Object]
      , type: 'tcp4'
      , fd: 5
      }
   , options: 
      { origins: '*:*'
      , resource: 'socket.io'
      , flashPolicyServer: true
      , transports: [Object]
      , transportOptions: {}
      , log: [Function]
      }
   , clientsIndex: { '1687825652770698': [Circular] }
   , clients: [Circular]
   , _clientCount: 0
   , _clientFiles: {}
   , _events: { connection: [Function] }
   }
, options: 
   { timeout: 8000
   , heartbeatInterval: 10000
   , closeTimeout: 0
   }
, connections: 1
, _open: true
, _heartbeats: 0
, connected: true
, upgradeHead: <Buffer ab d8 d0 b9 9f d1 58 f9>
, parser: 
   { buffer: ''
   , i: 0
   , _events: { data: [Function], error: [Function] }
   }
, request: 
   { socket: 
      { fd: 8
      , type: 'tcp4'
      , secure: false
      , _readWatcher: [Object]
      , readable: true
      , _writeQueue: []
      , _writeQueueEncoding: []
      , _writeQueueFD: []
      , _writeWatcher: [Object]
      , writable: true
      , _writeImpl: [Function]
      , _readImpl: [Function]
      , _shutdownImpl: [Function]
      , remoteAddress: '127.0.0.1'
      , remotePort: 53887
      , server: [Circular]
      , _outgoing: []
      , __destroyOnDrain: false
      , ondrain: [Function]
      , _idleTimeout: 120000
      , _idleNext: [Object]
      , _idlePrev: [Circular]
      , _idleStart: Thu, 02 Jun 2011 01:21:52 GMT
      , _events: [Object]
      , ondata: null
      , onend: null
      , _onOutgoingSent: [Function]
      , eventsAttached: true
      , _decoder: [Object]
      }
   , connection: [Circular]
   , httpVersion: '1.1'
   , headers: 
      { upgrade: 'WebSocket'
      , connection: 'Upgrade'
      , host: 'localhost:8080'
      , origin: 'http://127.0.0.1'
      , 'sec-websocket-key1': 'qe 3N { 82 6434) ^R7]0       8'
      , 'sec-websocket-key2': '1xY|8,048p7IB4=o>) 86 0'
      }
   , url: '/socket.io/websocket'
   , method: 'GET'
   , statusCode: null
   , client: [Circular]
   , httpVersionMajor: 1
   , httpVersionMinor: 1
   , upgrade: true
   , _events: 
      { error: [Function: destroyRequest]
      , timeout: [Function: destroyRequest]
      }
   }
, response: undefined
, connection: [Circular]
, waitingForNonce: false
, sessionId: '1687825652770698'
, handshaked: true
, _writeQueue: []
}
//------------------------------------------------------------
//Initializing client with transport "xhr-multipart"
{ listener: 
   { server: 
      { connections: 2
      , paused: false
      , pauseTimeout: 1000
      , watcher: [Object]
      , _events: [Object]
      , type: 'tcp4'
      , fd: 5
      }
   , options: 
      { origins: '*:*'
      , resource: 'socket.io'
      , flashPolicyServer: true
      , transports: [Object]
      , transportOptions: {}
      , log: [Function]
      }
   , clientsIndex: 
      { '1687825652770698': [Object]
      , '8330085766501725': [Circular]
      }
   , clients: [Circular]
   , _clientCount: 0
   , _clientFiles: {}
   , _events: { connection: [Function] }
   }
, options: 
   { timeout: 8000
   , heartbeatInterval: 10000
   , closeTimeout: 0
   }
, connections: 1
, _open: true
, _heartbeats: 0
, connected: true
, upgradeHead: undefined
, request: 
   { socket: 
      { fd: 9
      , type: 'tcp4'
      , secure: false
      , _readWatcher: [Object]
      , readable: true
      , _writeQueue: []
      , _writeQueueEncoding: []
      , _writeQueueFD: []
      , _writeWatcher: [Object]
      , writable: true
      , _writeImpl: [Function]
      , _readImpl: [Function]
      , _shutdownImpl: [Function]
      , remoteAddress: '127.0.0.1'
      , remotePort: 53889
      , server: [Circular]
      , _outgoing: [Object]
      , __destroyOnDrain: false
      , ondrain: [Function]
      , _idleTimeout: 120000
      , _idleNext: [Object]
      , _idlePrev: [Object]
      , _idleStart: Thu, 02 Jun 2011 01:22:02 GMT
      , _events: [Object]
      , ondata: [Function]
      , onend: [Function]
      , _onOutgoingSent: [Function]
      , eventsAttached: true
      }
   , connection: [Circular]
   , httpVersion: '1.1'
   , headers: 
      { host: 'localhost:8080'
      , 'user-agent': 'Mozilla/5.0 (X11; Linux x86_64; rv:2.0.1) Gecko/20100101 Firefox/4.0.1'
      , accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8'
      , 'accept-language': 'en-us,en;q=0.5'
      , 'accept-encoding': 'gzip, deflate'
      , 'accept-charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.7'
      , 'keep-alive': '115'
      , connection: 'keep-alive'
      , referer: 'http://localhost/node-server/pagina.html'
      , origin: 'http://localhost'
      , pragma: 'no-cache'
      , 'cache-control': 'no-cache'
      }
   , url: '/socket.io/xhr-multipart/'
   , method: 'GET'
   , statusCode: null
   , client: [Circular]
   , httpVersionMajor: 1
   , httpVersionMinor: 1
   , upgrade: false
   , _events: 
      { error: [Function: destroyRequest]
      , timeout: [Function: destroyRequest]
      }
   }
, response: 
   { socket: [Circular]
   , connection: [Circular]
   , output: []
   , outputEncodings: []
   , _last: true
   , chunkedEncoding: false
   , shouldKeepAlive: true
   , useChunkedEncodingByDefault: false
   , _hasBody: true
   , finished: false
   , _events: 
      { error: [Function: destroyResponse]
      , timeout: [Function: destroyResponse]
      }
   , _header: 'HTTP/1.1 200 OK\r\nAccess-Control-Allow-Origin: *\r\nAccess-Control-Allow-Credentials: true\r\nContent-Type: multipart/x-mixed-replace;boundary="socketio"\r\nConnection: keep-alive\r\n\r\n'
   , _headerSent: true
   }
, connection: [Circular]
, sessionId: '8330085766501725'
, handshaked: true
, _writeQueue: []
}
//------------------------------------------------------------
//Initializing client with transport "flashsocket"
{ listener: 
   { server: 
      { connections: 2
      , paused: false
      , pauseTimeout: 1000
      , watcher: [Object]
      , _events: [Object]
      , type: 'tcp4'
      , fd: 5
      }
   , options: 
      { origins: '*:*'
      , resource: 'socket.io'
      , flashPolicyServer: true
      , transports: [Object]
      , transportOptions: {}
      , log: [Function]
      }
   , clientsIndex: { '34454560023732483': [Circular] }
   , clients: [Circular]
   , _clientCount: 0
   , _clientFiles: 
      { 'socket.io.js': [Object]
      , 'lib/vendor/web-socket-js/WebSocketMain.swf': [Object]
      }
   , _events: { connection: [Function] }
   }
, options: 
   { timeout: 8000
   , heartbeatInterval: 10000
   , closeTimeout: 0
   }
, connections: 1
, _open: true
, _heartbeats: 0
, connected: true
, upgradeHead: <Buffer 33 4f df ec e4 c1 50 ca>
, parser: 
   { buffer: ''
   , i: 0
   , _events: { data: [Function], error: [Function] }
   }
, request: 
   { socket: 
      { fd: 9
      , type: 'tcp4'
      , secure: false
      , _readWatcher: [Object]
      , readable: true
      , _writeQueue: []
      , _writeQueueEncoding: []
      , _writeQueueFD: []
      , _writeWatcher: [Object]
      , writable: true
      , _writeImpl: [Function]
      , _readImpl: [Function]
      , _shutdownImpl: [Function]
      , remoteAddress: '127.0.0.1'
      , remotePort: 55643
      , server: [Circular]
      , _outgoing: []
      , __destroyOnDrain: false
      , ondrain: [Function]
      , _idleTimeout: 120000
      , _idleNext: [Object]
      , _idlePrev: [Object]
      , _idleStart: Thu, 02 Jun 2011 13:23:53 GMT
      , _events: [Object]
      , ondata: null
      , onend: null
      , _onOutgoingSent: [Function]
      , eventsAttached: true
      , _decoder: [Object]
      }
   , connection: [Circular]
   , httpVersion: '1.1'
   , headers: 
      { upgrade: 'WebSocket'
      , connection: 'Upgrade'
      , host: 'localhost:8080'
      , origin: 'http://localhost:8080'
      , cookie: 'socketio=flashsocket'
      , 'sec-websocket-key1': '1 E& V 9 ) 8  5138 16c0y'
      , 'sec-websocket-key2': '[vi`4  i29J   35 4  0 9 Z3 3'
      }
   , url: '/socket.io/flashsocket'
   , method: 'GET'
   , statusCode: null
   , client: [Circular]
   , httpVersionMajor: 1
   , httpVersionMinor: 1
   , upgrade: true
   , _events: 
      { error: [Function: destroyRequest]
      , timeout: [Function: destroyRequest]
      }
   }
, response: undefined
, connection: [Circular]
, waitingForNonce: false
, sessionId: '34454560023732483'
, handshaked: true
, _writeQueue: []
}
//------------------------------------------------------------
// Objeto request
{ socket: 
   { fd: 8
   , type: 'tcp4'
   , secure: false
   , _readWatcher: { callback: [Function] }
   , readable: true
   , _writeQueue: []
   , _writeQueueEncoding: []
   , _writeQueueFD: []
   , _writeWatcher: { socket: [Circular], callback: [Function: _doFlush] }
   , writable: true
   , _writeImpl: [Function]
   , _readImpl: [Function]
   , _shutdownImpl: [Function]
   , remoteAddress: '127.0.0.1'
   , remotePort: 60118
   , server: 
      { connections: 1
      , paused: false
      , pauseTimeout: 1000
      , watcher: [Object]
      , _events: [Object]
      , type: 'tcp4'
      , fd: 5
      }
   , _outgoing: [ [Object] ]
   , __destroyOnDrain: false
   , ondrain: [Function]
   , _idleTimeout: 120000
   , _idleNext: 
      { repeat: 120
      , _idleNext: [Circular]
      , _idlePrev: [Circular]
      , callback: [Function]
      }
   , _idlePrev: [Circular]
   , _idleStart: Thu, 02 Jun 2011 13:27:40 GMT
   , _events: 
      { timeout: [Function]
      , error: [Function]
      , close: [Function]
      }
   , ondata: [Function]
   , onend: [Function]
   , _onOutgoingSent: [Function]
   }
, connection: [Circular]
, httpVersion: '1.1'
, headers: 
   { host: 'localhost:8080'
   , 'user-agent': 'Mozilla/5.0 (X11; Linux x86_64; rv:2.0.1) Gecko/20100101 Firefox/4.0.1'
   , accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8'
   , 'accept-language': 'en-us,en;q=0.5'
   , 'accept-encoding': 'gzip, deflate'
   , 'accept-charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.7'
   , 'keep-alive': '115'
   , connection: 'keep-alive'
   , cookie: 'socketio=flashsocket'
   , 'cache-control': 'max-age=0'
   }
, url: '/resposta.json'
, method: 'GET'
, statusCode: null
, client: [Circular]
, httpVersionMajor: 1
, httpVersionMinor: 1
, upgrade: false
}
//------------------------------------------------------------
//objeto servidor
{ connections: 2
, paused: false
, pauseTimeout: 1000
, watcher: { host: [Circular], callback: [Function] }
, _events: 
   { request: [Function]
   , connection: [ [Function: connectionListener], [Function] ]
   , upgrade: [ [Function] ]
   , close: [Function]
   }
, type: 'tcp4'
, fd: 5
}

